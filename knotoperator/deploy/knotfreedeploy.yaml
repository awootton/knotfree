# Copyright 2019,2020,2021 Alan Tracey Wootton 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "aide"
  labels:
    app: "knotfreeaide"
spec:
  replicas: 1
  selector:
    matchLabels:
      run: "knotfreeaide"
  template:
    metadata:
      labels:
        run: "knotfreeaide"
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9102'
    spec:
      containers:
      - name: golang
        imagePullPolicy: Always
        image: gcr.io/fair-theater-238820/knotfreeserver 
        command: ["/knotfreeiot/manager"] # ["sleep","9999999"] # ["/go/bin/linux_386/knotfreeiot"] 
        #args: ["--nano"]
        ports:
        - containerPort: 8384
          name : iot
        - containerPort: 1883
          name : mqtt
        - containerPort: 8080 
          name : http
        - containerPort: 8085 
          name : http-public
        - containerPort: 7465 
          name : text
        - containerPort: 3000 
          name : graf
        - containerPort: 9090 
          name : promfwd
        - containerPort: 8000 
          name : libra
        - containerPort: 9102 
          name : prom
        resources:
          limits:
            cpu: 1000m   
            memory: 1000Mi  
          requests:
            cpu: 500m   
            memory: 500Mi 
        env:
        - name: NAME
          value: "knotfreeaide"
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: foo
          mountPath: "/root/atw/"
          readOnly: true
      volumes:
      - name: foo
        secret:
          secretName: privatekeys4
              
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: "knotfreeaide"
  name: "knotfreeaide"
  annotations:
    team: "knotfree"
spec:
  type: LoadBalancer
  ports:

  - port: 1883
    name: mqtt
    protocol: TCP
    
  - port: 7465
    name: text
    protocol: TCP

  - port: 8384
    name: iot
    protocol: TCP

  - name: http
    port: 80
    targetPort: 8085
    protocol: TCP

  - name: promfwd
    port: 9090
    targetPort: 9090 
    protocol: TCP

  - name: prom
    port: 9102
    targetPort: 9102 
    protocol: TCP

  - name: graf
    port: 3000
    targetPort: 3000
    protocol: TCP 

  # - name: libra
  #   port: 8000
  #   targetPort: 8000
  #   protocol: TCP 

  selector:
    run: "knotfreeaide"


#---

# see: https://runnable.com/blog/how-to-use-lets-encrypt-on-kubernetes

# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: letsencrypt-job
#   labels:
#     app: letsencrypt
# spec:
#   template:
#     metadata:
#       name: letsencrypt
#       labels:
#         app: letsencrypt
#     spec:
#       containers:
#       # Bash script that starts an http server and launches certbot
#       # Fork of github.com/sjenning/kube-nginx-letsencrypt
#       - image: quay.io/hiphipjorge/kube-nginx-letsencrypt:latest
#         name: letsencrypt
#         imagePullPolicy: Always
#         ports:
#         - name: letsencrypt
#           containerPort: 80
#         resources:
#           limits:
#             cpu: 25m  
#             memory: 25Mi  
#         env:
#         - name: DOMAINS
#           value: knotfree.net # Domain you want to use. CHANGE ME!
#         - name: EMAIL
#           value: alan@gotohere.com # Your email. CHANGE ME!
#         - name: SECRET
#           value: letsencrypt-certs
#       restartPolicy: Never

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: letsencrypt
# spec:
#   selector:
#     app: letsencrypt
#   ports:
#   - protocol: "TCP"
#     port: 80

# ---

# apiVersion: v1
# kind: Secret
# metadata:
#   name: letsencrypt-certs
# type: Opaque
# # Create an empty secret (with no data) in order for the update to work

